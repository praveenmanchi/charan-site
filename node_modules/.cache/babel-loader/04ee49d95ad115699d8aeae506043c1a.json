{"ast":null,"code":"var _jsxFileName = \"/Users/praveenmanchi/Desktop/charan site/src/components/TimeCountDown/TimeCountDown.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  useState,\n  useEffect\n} = React;\n\nconst TimeCountDown = props => {\n  _s();\n\n  const [countdownDate] = useState(new Date('9/15/2024').getTime());\n  const [state, setState] = useState({\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  });\n  useEffect(() => {\n    setInterval(() => setNewTime(), 1000);\n  }, []);\n\n  const setNewTime = () => {\n    if (countdownDate) {\n      const currentTime = new Date().getTime();\n      const distanceToDate = countdownDate - currentTime;\n      let days = Math.floor(distanceToDate / (1000 * 60 * 60 * 24));\n      let hours = Math.floor(distanceToDate % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n      let minutes = Math.floor(distanceToDate % (1000 * 60 * 60) / (1000 * 60));\n      let seconds = Math.floor(distanceToDate % (1000 * 60) / 1000);\n      const numbersToAddZeroTo = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n      days = `${days}`;\n\n      if (numbersToAddZeroTo.includes(hours)) {\n        hours = `0${hours}`;\n      } else if (numbersToAddZeroTo.includes(minutes)) {\n        minutes = `0${minutes}`;\n      } else if (numbersToAddZeroTo.includes(seconds)) {\n        seconds = `0${seconds}`;\n      }\n\n      setState({\n        days: days,\n        hours: hours,\n        minutes,\n        seconds\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"react-countdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time\",\n        children: state.days || '0'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"time-text\",\n        children: \"Days\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time\",\n        children: state.hours || '00'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"time-text\",\n        children: \"Hours\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time\",\n        children: state.minutes || '00'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"time-text\",\n        children: \"Min\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time\",\n        children: state.seconds || '00'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"time-text\",\n        children: \"Sec\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TimeCountDown, \"8Pu5kBSfCu0T5yZxjl+EF0CZCtM=\");\n\n_c = TimeCountDown;\nexport default TimeCountDown;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeCountDown\");","map":{"version":3,"sources":["/Users/praveenmanchi/Desktop/charan site/src/components/TimeCountDown/TimeCountDown.js"],"names":["React","useState","useEffect","TimeCountDown","props","countdownDate","Date","getTime","state","setState","days","hours","minutes","seconds","setInterval","setNewTime","currentTime","distanceToDate","Math","floor","numbersToAddZeroTo","includes"],"mappings":"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","sourcesContent":["import React from 'react'\nconst { useState, useEffect } = React;\n\nconst TimeCountDown = (props) => {\n  const [countdownDate] = useState(new Date('9/15/2024').getTime());\n  const [state, setState] = useState({\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  });\n\n  useEffect(() => {\n    setInterval(() => setNewTime(), 1000);\n  }, []);\n\n  const setNewTime = () => {\n    if (countdownDate) {\n      const currentTime = new Date().getTime();\n\n      const distanceToDate = countdownDate - currentTime;\n\n      let days = Math.floor(distanceToDate / (1000 * 60 * 60 * 24));\n      let hours = Math.floor(\n        (distanceToDate % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60),\n      );\n      let minutes = Math.floor(\n        (distanceToDate % (1000 * 60 * 60)) / (1000 * 60),\n      );\n      let seconds = Math.floor((distanceToDate % (1000 * 60)) / 1000);\n\n      const numbersToAddZeroTo = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n      days = `${days}`;\n      if (numbersToAddZeroTo.includes(hours)) {\n        hours = `0${hours}`;\n      } else if (numbersToAddZeroTo.includes(minutes)) {\n        minutes = `0${minutes}`;\n      } else if (numbersToAddZeroTo.includes(seconds)) {\n        seconds = `0${seconds}`;\n      }\n\n      setState({ days: days, hours: hours, minutes, seconds });\n    }\n  };\n\n  return (\n    <div className=\"react-countdown\">\n      <div className='time-section'>\n        <div className='time'>{state.days || '0'}</div>\n        <small className=\"time-text\">Days</small>\n      </div>\n      <div className='time-section'>\n        <div className='time'>{state.hours || '00'}</div>\n        <small className=\"time-text\">Hours</small>\n      </div>\n      <div className='time-section'>\n        <div className='time'>{state.minutes || '00'}</div>\n        <small className=\"time-text\">Min</small>\n      </div>\n      <div className='time-section'>\n        <div className='time'>{state.seconds || '00'}</div>\n        <small className=\"time-text\">Sec</small>\n      </div>\n    </div>\n  );\n};\n\nexport default TimeCountDown;\n\n"]},"metadata":{},"sourceType":"module"}